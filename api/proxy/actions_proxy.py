from flask import Request, Response, jsonify

from api.actions.actions_responses_generator import ActionsResponsesGenerator
from api.proxy.proxy_interface import ProxyInterface


class ActionsProxy(ProxyInterface):
    """Implementation of the interface that is used as a generic entry point to the actions service."""

    def __init__(self, actions_responses_generator: ActionsResponsesGenerator):
        """
        Constructor.

        :param actions_responses_generator: The actions responses generator service to which successful
        requests are redirected.
        """
        self._actions_responses_generator: ActionsResponsesGenerator = actions_responses_generator

    @staticmethod
    def _validate_data(action_json_data) -> [bool, dict]:
        """
        Validate the data sent in a user message.

        :param action_json_data: The JSON object sent in a user message.
        :return: A boolean value that indicates if the JSON object is valid and
        a dictionary with the HTML of an identify error.
        """
        expected_key = 'action'

        # Check if a valid JSON was sent
        if not action_json_data or expected_key not in action_json_data or len(action_json_data) > 1:
            return [False, {'error': 'Los tipos de datos enviados son invÃ¡lidos.'}]

        return [True, {}]

    def handle_request(self, user_request: Request) -> Response:
        """
        Validate the structure of a user request and redirects the request to the actions service.

        :param user_request: An action request submitted by a user.
        :return: The response generated by the actions service.
        """
        action_json_data = user_request.get_json()
        validation_result = self._validate_data(action_json_data)

        if not validation_result[0]:
            return jsonify(validation_result[1])

        return self._actions_responses_generator.handle_request(user_request)
